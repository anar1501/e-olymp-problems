#include <stdio.h>
#include <string.h>
#include <stdbool.h>
#include <stdlib.h>
#define Size 10000000
long long int Stack[Size];
long long int index_of_element=0;
void push(long int n);
void pop();
long long int back();
bool is_empty();
long long int size();
int main()
{
    char op[10];
    while(scanf("%s",op)!=EOF){
    if(strcmp(op,"push")==0){
        long long int n;
        scanf("%lld",&n);
        push(n);
        printf("ok\n");
    }
    else if(strcmp(op,"pop")==0){
            if(is_empty()){
                printf("error\n");
            }
            else{
            printf("%lld",back());
            pop();
            printf("\n");
            }

    }

    else if(strcmp(op,"back")==0){
            if(is_empty()){
                printf("error\n");
            }
            else{
            printf("%lld\n",back());
            }
    }
    else if(strcmp(op,"size")==0){
            printf("%lld",size());
             printf("\n");
    }
    else if(strcmp(op,"clear")==0){
            while(!is_empty()){
            pop();
    }
             printf("ok\n");
    }
    else if(strcmp(op,"exit")==0)
    {
     printf("bye");
     exit(0);
    }


}
return 0;
}
void push(long int n)
{
Stack[index_of_element++]=n;
}
void pop()
{
     index_of_element--;
}
long long int back()
{
    return Stack[index_of_element-1];
}
bool is_empty()
{
    return size()==0;
}
long long int size()
{
    return index_of_element;
}